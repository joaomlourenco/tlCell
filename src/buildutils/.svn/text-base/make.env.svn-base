# --------------------------------------------------------------  
# (C)Copyright 2001,2007,                                         
# International Business Machines Corporation,                    
# Sony Computer Entertainment, Incorporated,                      
# Toshiba Corporation,                                            
#                                                                 
# All Rights Reserved.                                            
# --------------------------------------------------------------  
# PROLOG END TAG zYx                                              

#-----------------------------
# 		HOST
#-----------------------------

ifndef HOST_COMPILER
    # Compiler for programs that will run on the current (native) processor
    #
    # Choices:
    # --------
    # local 	= gcc toolchain installed in /usr/bin
    # opt 	= gcc toolchain installed in /opt

    HOST_COMPILER	:= local
#   HOST_COMPILER	:= opt
endif


#-----------------------------
# 		SPU
#-----------------------------

ifndef SPU_COMPILER
    # Compiler for programs that will run on the Cell SPU processor
    #
    # Choices:
    # --------
    # xlc 	= IBM's xlc compiler
    # gcc	= GNU gcc compiler

#   SPU_COMPILER	:= xlc
    SPU_COMPILER	:= gcc
endif

ifndef SPU_TIMING
    # To get a corresponding "<file>.timing" file when building a
    # "<file>.s" assembly file, set this value to 1.

    SPU_TIMING		:= 0
#   SPU_TIMING		:= 1
endif


#----------------------------------
# 		SPU/PPU
#----------------------------------


ifndef XLC_VERSION
    # If SPU_COMPILER, PPU32_COMPILER, or PPU64_COMPILER is set to xlc, this
    # variable defines which version to use.  The versions are specified
    # in the order of preference; the first one found will be used.
     
    # Choices:
    # --------
    # xlc/9.0		= Fedora 6

    XLC_VERSION		:= xlc/cbe/9.0
endif


#-----------------------------
# 		PPU
#-----------------------------

ifdef PPU_COMPILER
    # Both ppu compilers can be set with this variable

    PPU32_COMPILER	:= $(PPU_COMPILER)
    PPU64_COMPILER	:= $(PPU_COMPILER)
endif

ifndef PPU32_COMPILER
    # Compiler for 32-bit programs that will run on the Cell PPU processor
    #
    # Choices:
    # --------
    # xlc	= IBM's xlc compiler
    # gcc	= gcc compiler
    # local	= gcc installed in /usr/bin (native only)

#   PPU32_COMPILER	:= xlc
    PPU32_COMPILER	:= gcc
#   PPU32_COMPILER	:= local
endif

ifndef PPU64_COMPILER
    # Compiler for 64-bit programs that will run on the Cell PPU processor
    #
    # Choices:
    # --------
    # xlc	= IBM's xlc compiler
    # gcc	= gcc compiler
    # local	= gcc installed in /usr/bin (native only)

#   PPU64_COMPILER	:= xlc
    PPU64_COMPILER	:= gcc
#   PPU64_COMPILER	:= local
endif
